{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":"<p>Vocard is a highly customizable Discord music bot, designed to deliver a user-friendly experience. It offers support for a wide range of streaming platforms including Youtube, Soundcloud, Spotify, Twitch, and more.</p>"},{"location":"#tutorial","title":"Tutorial","text":"<p>Click on the image below to watch the tutorial on Youtube.</p> <p></p>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>Python 3.10+</li> <li>Lavalink Server (Requires 4.0.0+) </li> </ul>"},{"location":"#installation","title":"Installation","text":""},{"location":"#with-gif","title":"with git","text":"<ol> <li>Clone the repository:     <pre><code>git clone https://github.com/ChocoMeow/Vocard.git\n</code></pre></li> <li>Go to the directory:     <pre><code>cd Vocard\n</code></pre></li> <li>Install required packages, ideally by using a virtual environment:     <pre><code>python -m pip install -r requirements.txt\n</code></pre></li> </ol> <p>After installing all packages, you must configure the bot before starting.</p>"},{"location":"#with-docker","title":"with docker recommended","text":"<p>Utilizing the official Docker image enables a quick setup, as it conveniently includes all necessary dependencies. To get started, simply pull the image using a terminal command:</p> Docker HubGithub <pre><code>docker pull chocomeow/vocard:v2.6.8a\n</code></pre> <pre><code>docker pull ghcr.io/chocomeow/vocard:v2.6.8a\n</code></pre> <ol> <li>Configure the bot before starting the docker containers.</li> <li>Start the Docker containers in detached mode:     <pre><code>docker-compose up -d\n</code></pre></li> </ol>"},{"location":"#configuration","title":"Configuration","text":"<ol> <li>Rename <code>.env Example</code> to <code>.env</code> and fill all the values.</li> <li>Rename <code>settings Example.json</code> to <code>settings.json</code> and customize your settings.</li> <li> <p>Now, you can start your bot with <code>python main.py</code>.</p> </li> </ol>"},{"location":"configuration/","title":"Configuration","text":""},{"location":"configuration/#settings-up-env","title":"Settings up <code>.env</code>","text":"<p>Rename .env Example to .env and fill all the values. .env<pre><code>TOKEN = XXXXXXXXXXXXXXXXXXXXXXXX.XXXXXX.XXXXXXXXXXXXXXXXXXXXXXXXXXX # (1)\nCLIENT_ID = 123456789012345678 # (2)\nCLIENT_SECRET_ID = XXXXXXXXXX-XXXXXXXXXXXXXXXXXXXXX # (3)\n\nBUG_REPORT_CHANNEL_ID = 123456789012345678 # (5)\n\nSPOTIFY_CLIENT_ID = 0XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX # (6)\nSPOTIFY_CLIENT_SECRET = 0XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nGENIUS_TOKEN = XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX # (7)\n\nMONGODB_URL = mongodb+srv://user:password@clusterURL # (8)\nMONGODB_NAME = Vocard\n\nDASHBOARD_HOST = 0.0.0.0 # (9)\nDASHBOARD_PORT = 5555 # (10)\nDASHBOARD_SERCET_KEY = DASHBOARD_SECRET_KEY # (4)\nDASHBOARD_SECURE = False # (11)\n</code></pre></p> <ol> <li>Your Discord bot token. You can get it on Discord Portal</li> <li>(Optional) Your Discord bot client ID. You can get it on Discord Portal</li> <li>(Optional) Your Discord bot client secret ID. You can get it on Discord Portal</li> <li>(Optional) The secret key for dashboard. You can enter a random string. e.g. FJdjfiowen39</li> <li>Enter a text channel ID. All the error messages will send to this text channel.</li> <li>Your Spoity client ID and client secret ID. You can get it on Spotify Portal</li> <li>Your genius api token. You can get it on Genius Lyrics API</li> <li>Your Mongo datebase url and name. You can create MongoDB on MongoDB</li> <li>Enter the domain name or ip address of your callback URL (if applicable)</li> <li>Specify the port number for the dashboard service (if required)</li> <li>Indicate whether your callback URL uses HTTPS (type True) or HTTP (type False)</li> </ol>"},{"location":"configuration/#settings-up-settingsjson","title":"Settings up <code>settings.json</code>","text":"<p>Rename <code>settings Example.json</code> to <code>settings.json</code> and customize your settings.</p> <p>Note</p> <p>If you are using Genius as your lyrics search engine, you must install the lyricsgenius module <code>(pip install lyricsgenius)</code></p> Latestv2.6.7 settings.json<pre><code>{\n    \"nodes\": { # (1)\n        \"DEFAULT\": {\n            \"host\": \"127.0.0.1\",\n            \"port\": 2333,\n            \"password\": \"password\",\n            \"secure\": false,\n            \"identifier\": \"DEFAULT\"\n        }   \n    },\n    \"prefix\": \"?\", # (2)\n    \"activity\":[\n        {\"listen\": \"/help\"} # (3)\n    ],\n    \"bot_access_user\": [], # (4)\n    \"embed_color\":\"0xb3b3b3\", # (5)\n    \"default_max_queue\": 1000, # (6)\n    \"lyrics_platform\": \"A_ZLyrics\", # (7)\n    \"ipc_server\": { # (8)\n        \"host\": \"127.0.0.1\",\n        \"port\": 8000,\n        \"enable\": false\n    },\n    \"sources_settings\": { # (9)\n        \"youtube\": {\n            \"emoji\": \"&lt;:youtube:826661982760992778&gt;\",\n            \"color\": \"0xFF0000\"\n        },\n        \"youtube music\": {\n            \"emoji\": \"&lt;:youtube:826661982760992778&gt;\",\n            \"color\": \"0xFF0000\"\n        },\n        \"spotify\": {\n            \"emoji\": \"&lt;:spotify:826661996615172146&gt;\",\n            \"color\": \"0x1DB954\"\n        },\n        \"soundcloud\": {\n            \"emoji\": \"&lt;:soundcloud:852729280027033632&gt;\",\n            \"color\": \"0xFF7700\"\n        },\n        \"twitch\": {\n            \"emoji\": \"&lt;:twitch:852729278285086741&gt;\",\n            \"color\": \"0x9B4AFF\"\n        },\n        \"bandcamp\": {\n            \"emoji\": \"&lt;:bandcamp:864694003811221526&gt;\",\n            \"color\": \"0x6F98A7\"\n        },\n        \"vimeo\": {\n            \"emoji\": \"&lt;:vimeo:864694001919721473&gt;\",\n            \"color\": \"0x1ABCEA\"\n        },\n        \"apple\": {\n            \"emoji\": \"&lt;:applemusic:994844332374884413&gt;\",\n            \"color\": \"0xE298C4\"\n        },\n        \"reddit\": {\n            \"emoji\": \"&lt;:reddit:996007566863773717&gt;\",\n            \"color\": \"0xFF5700\"\n        },\n        \"tiktok\": {\n            \"emoji\": \"&lt;:tiktok:996007689798811698&gt;\",\n            \"color\": \"0x74ECE9\"\n        }\n    },\n    \"default_controller\": { # (10)\n        \"embeds\": {\n            \"active\": {\n                \"description\": \"**Now Playing: ```[@@track_name@@]```\\nLink: [Click Me](@@track_url@@) | Requester: @@requester@@ | DJ: @@dj@@**\",\n                \"footer\": {\n                    \"text\": \"Queue Length: @@queue_length@@ | Duration: @@track_duration@@ | Volume: @@volume@@% {{loop_mode != 'Off' ?? | Repeat: @@loop_mode@@}}\"\n                },\n                \"image\": \"@@track_thumbnail@@\",\n                \"author\": {\n                    \"name\": \"Music Controller | @@channel_name@@\",\n                    \"icon_url\": \"@@bot_icon@@\"\n                },\n                \"color\": \"@@track_color@@\"\n            },\n            \"inactive\": {\n                \"title\": {\n                    \"name\": \"There are no songs playing right now\"\n                },\n                \"description\": \"[Support](@@server_invite_link@@) | [Invite](@@invite_link@@) | [Questionnaire](https://forms.gle/Qm8vjBfg2kp13YGD7)\",\n                \"image\": \"https://i.imgur.com/dIFBwU7.png\",\n                \"color\": \"@@default_embed_color@@\"\n            }\n        },\n        \"default_buttons\": [\n            [\"back\", \"resume\", \"skip\", {\"stop\": \"red\"}, \"add\"],\n            [\"tracks\"]\n        ],\n        \"disableButtonText\": false  # (11)\n    },\n    \"cooldowns\": { # (12)\n        \"connect\": [2, 30],\n        \"playlist view\": [1, 30]\n    },\n    \"aliases\": { # (13)\n        \"connect\": [\"join\"],\n        \"leave\": [\"stop\", \"bye\"],\n        \"play\": [\"p\"],\n        \"view\": [\"v\"]\n    }\n}\n</code></pre> <ol> <li>Lavalink Server that Vocard will connected! You have to provide host, port, password and identifier of the server.</li> <li>You can set the prefix of the bot. If you don't provide any prefix, the bot will disable the message command.</li> <li>You can set the activity status of the bot. You can loop at some example here.</li> <li>By providing the Discord user ID, you can grant these users access to all administrative commands. This will allow them to bypass any limitations imposed on the commands. <code>Example: [123456789012345678, 876543210987654321, ...]</code></li> <li>You must pass a Hexadecimal color code and add <code>0x</code> before the color code. <code>Example: 0xb3b3b3</code></li> <li>You can set a default maximum number of tracks that can be added to the queue.</li> <li>You can set lyrics search engine. <code>(e.g. A_ZLyrics, Genius, lyrist)</code></li> <li>You can set the host, password and enable of the ipc server.</li> <li>You can change the source emoji of the track with discord emoji like <code>&lt;:EMOJI_NAME:EMOJI_ID&gt;</code> and change the color of the source in Hexadecimal color.</li> <li>You can create your custom embeds and buttons in the player controller. Example Here</li> <li>You can disable the text on the button in the player controller, if you set <code>true</code>.</li> <li>You can set a custom cooldown for the command. <code>Example: \"command_name\": [The total number of tokens available, The length of the cooldown period in seconds]</code></li> <li>You can set custom aliases in the command. <code>Example: \"command_name\": [alias1, alias2, ...]</code></li> </ol> settings.json<pre><code>{\n    \"nodes\": { # (1)\n        \"DEFAULT\": {\n            \"host\": \"127.0.0.1\",\n            \"port\": 2333,\n            \"password\": \"password\",\n            \"secure\": false,\n            \"identifier\": \"DEFAULT\"\n        }   \n    },\n    \"prefix\": \"?\", # (2)\n    \"activity\":[ # (3)\n        {\"listen\": \"/help\"}\n    ],\n    \"bot_access_user\": [], # (4)\n    \"embed_color\":\"0xb3b3b3\", # (5)\n    \"default_max_queue\": 1000, # (6)\n    \"lyrics_platform\": \"A_ZLyrics\", # (7)\n    \"ipc_server\": { # (8)\n        \"host\": \"127.0.0.1\",\n        \"port\": 8000,\n        \"enable\": false\n    },\n    \"emoji_source_raw\": { # (9)\n        \"youtube\": \"&lt;:youtube:826661982760992778&gt;\",\n        \"youtube music\": \"&lt;:youtube:826661982760992778&gt;\",\n        \"spotify\": \"&lt;:spotify:826661996615172146&gt;\",\n        \"soundcloud\": \"&lt;:soundcloud:852729280027033632&gt;\",\n        \"twitch\": \"&lt;:twitch:852729278285086741&gt;\",\n        \"bandcamp\": \"&lt;:bandcamp:864694003811221526&gt;\",\n        \"vimeo\": \"&lt;:vimeo:864694001919721473&gt;\",\n        \"apple\": \"&lt;:applemusic:994844332374884413&gt;\",\n        \"reddit\": \"&lt;:reddit:996007566863773717&gt;\",\n        \"tiktok\": \"&lt;:tiktok:996007689798811698&gt;\"\n    },\n    \"default_controller\": { # (10)\n        \"embeds\": {\n            \"active\": {\n                \"description\": \"**Now Playing: ```[@@track_name@@]```\\nLink: [Click Me](@@track_url@@) | Requester: @@requester@@ | DJ: @@dj@@**\",\n                \"footer\": {\n                    \"text\": \"Queue Length: @@queue_length@@ | Duration: @@duration@@ | Volume: @@volume@@% {{loop_mode!=Off ?? | Repeat: @@loop_mode@@}}\"\n                },\n                \"image\": \"@@track_thumbnail@@\",\n                \"author\": {\n                    \"name\": \"Music Controller | @@channel_name@@\",\n                    \"icon_url\": \"@@bot_icon@@\"\n                },\n                \"color\": \"@@default_embed_color@@\"\n            },\n            \"inactive\": {\n                \"title\": {\n                    \"name\": \"There are no songs playing right now\"\n                },\n                \"description\": \"[Support](@@server_invite_link@@) | [Invite](@@invite_link@@) | [Questionnaire](https://forms.gle/Qm8vjBfg2kp13YGD7)\",\n                \"image\": \"https://i.imgur.com/dIFBwU7.png\",\n                \"color\": \"@@default_embed_color@@\"\n            }\n        },\n        \"default_buttons\": [\n            [\"back\", \"resume\", \"skip\", {\"stop\": \"red\"}, \"add\"],\n            [\"tracks\"]\n        ]\n    },\n    \"cooldowns\": { # (11)\n        \"connect\": [2, 30],\n        \"playlist view\": [1, 30]\n    },\n    \"aliases\": { # (12)\n        \"connect\": [\"join\"],\n        \"leave\": [\"stop\", \"bye\"],\n        \"play\": [\"p\"],\n        \"view\": [\"v\"]\n    }\n}\n</code></pre> <ol> <li>Lavalink Server that Vocard will connected! You have to provide host, port, password and identifier of the server.</li> <li>You can set the prefix of the bot. If you don't provide any prefix, the bot will disable the message command.</li> <li>You can set the activity status of the bot. You can loop at some example here.</li> <li>By providing the Discord user ID, you can grant these users access to all administrative commands. This will allow them to bypass any limitations imposed on the commands. <code>Example: [123456789012345678, 876543210987654321, ...]</code></li> <li>You must pass a Hexadecimal color code and add <code>0x</code> before the color code. <code>Example: 0xb3b3b3</code></li> <li>You can set a default maximum number of tracks that can be added to the queue.</li> <li>You can set lyrics search engine. <code>(e.g. A_ZLyrics, Genius)</code></li> <li>You can set the host, password and enable of the ipc server.</li> <li>You can change the source emoji of the track with discord emoji like <code>&lt;:EMOJI_NAME:EMOJI_ID&gt;</code>.</li> <li>You can create your custom embeds and buttons in the player controller. Example Here</li> <li>You can set a custom cooldown for the command. <code>Example: \"command_name\": [The total number of tokens available, The length of the cooldown period in seconds]</code></li> <li>You can set custom aliases in the command. <code>Example: \"command_name\": [alias1, alias2, ...]</code></li> </ol>"},{"location":"how-to-upgrade/","title":"How to upgrade","text":"<p>Warning</p> <p>Please note that the bot directory does not contain any personal  files before running the update command. Any such files will be deleted upon execution.</p> <p>Check the current version</p> <pre><code>python update.py -c\n</code></pre> <p>Install the latest version</p> <pre><code>python update.py -l\n</code></pre> <p>Install the specified version</p> <pre><code>python update.py -v VERSION\n</code></pre> <p>Install the beta version</p> <pre><code>python update.py -b\n</code></pre>"},{"location":"language/","title":"Languages","text":"<p>Vocard provides support for multiple languages, including both Localization slash command languages and standard language packs. Additionally, Vocard allows you to easily customize your own language. Simply follow the steps below.</p>"},{"location":"language/#creating-a-standard-language-pack","title":"Creating a Standard Language Pack","text":"<p>To create a new language pack, follow these steps:</p> <p>Note</p> <p>Do not alter or remove variables like <code>{0} {1} ...</code> as they are essential for the bot's functionality.</p> <ol> <li>Go to the <code>langs</code> directory and duplicate the <code>EN.json</code> file.</li> <li>Rename the copied file with the desired language code (e.g., for Korean, use <code>KO.json</code>).</li> <li>Open the copied file and replace the existing text with your translations.</li> <li>Once you've made your changes, restart the bot to apply them.</li> </ol>"},{"location":"language/#creating-a-localization-slash-command-language-pack","title":"Creating a Localization Slash Command Language Pack","text":"<p>To create a new localization slash command language pack, follow these steps:</p> <ol> <li>Navigate to the <code>local_langs</code> directory and duplicate the <code>zh-TW.json</code> file.</li> <li>Rename the copied file with the appropriate language code provided by Discord (e.g., for Korean, use <code>ko.json</code>).</li> <li>Open the copied file and replace the existing text with your translations.</li> <li>Once you've made your changes, re-sync the bot.</li> </ol>"},{"location":"language/#how-to-re-sync-the-bot","title":"How to re-sync the bot","text":"<ol> <li>Stop your bot and open your <code>settings.json</code> file.</li> <li>Remove the <code>version</code> key inside the settings file.</li> </ol> BeforeAfter settings.json<pre><code>{\n    ...\n    \"play\": [\"p\"],\n    \"view\": [\"v\"]\n},\n\"version\": \"v2.6.8\" # (1)\n</code></pre> <ol> <li>Your version might differ, such as <code>v2.6.6, v2.6.7, ...</code> However, this discrepancy is not significant.</li> </ol> settings.json<pre><code>{\n    ...\n    \"play\": [\"p\"],\n    \"view\": [\"v\"]\n}\n</code></pre>"},{"location":"placeholder/","title":"Placeholder","text":""},{"location":"placeholder/#bot-activity","title":"Bot Activity","text":"<p>Note</p> <p>The activity status will be updated every 10 minutes. If your bot has multiple activities, it will switch to a different activity every 10 minutes.</p> Usage<pre><code>{\"@@action@@\": \"@@value@@ some text ...\"}\n</code></pre> Action Name Description play Display the playing status. listen Display the listening status. watch Display the watching status. stream Display the streaming status. Value Name Description guilds Number of guilds in the bot users Number of users in the voice channel. players Number of players playing. nodes Number of nodes are connected. Example (Single Activity)Example (Multiple Activity) <p> settings.json<pre><code>\"activity\":[\n    {\"listen\": \"/help\"}\n]\n</code></pre></p> <p> settings.json<pre><code>\"activity\":[\n    {\"listen\": \"/help\"},\n    {\"listen\": \"@@guilds@@ Guilds\"}\n    {\"watch\": \"@@players@@ Players\"}\n]\n</code></pre></p>"},{"location":"placeholder/#controller","title":"Controller","text":""},{"location":"placeholder/#embeds","title":"Embeds","text":"Usage Of PlaceholderUsage Of Expression <pre><code>@@value@@\n</code></pre> <pre><code>{{ EXPRESSION ?? TRUE // FALSE }}\n</code></pre> Value Name Description channel_name The name of the channel the bot is playing on. track_name The name of the track currently playing. track_url The url of the track currently playing. track_author The name of the author of the track currently playing. track_duration The length of the track currently playing. track_thumbnail The thumbnail of the track currently playing. track_color The color associated with the source of the currently playing track. For example, YouTube tracks are indicated in red. This color can be customized in the settings.json file requester The mention name of the requester of the currently playing track. requester_name The name of the requester of the currently playing track. requester_avatar The avatar url of the requester of the currently playing track. queue_length Number of queue lengths volume Music volume. dj DJ role. <code>(It can be a user or role)</code> loop_mode Current repeat mode. default_embed_color Default embed color. <code>(color_code in settings.json)</code> bot_icon The avatar of the bot. server_invite_link The invite url of the support server invite_link The invite url of the bot. Example 1 <p> settings.json<pre><code>\"default_controller\": {\n    \"embeds\": {\n        \"active\": {\n            \"description\": \"**Now Playing: ```[@@track_name@@]```\\nLink: [Click Me](@@track_url@@) | Requester: @@requester@@ | DJ: @@dj@@**\",\n            \"footer\": {\n                \"text\": \"Queue Length: @@queue_length@@ | Duration: @@track_duration@@ | Volume: @@volume@@% {{loop_mode != 'Off' ?? | Repeat: @@loop_mode@@}}\"\n            },\n            \"image\": \"@@track_thumbnail@@\",\n            \"author\": {\n                \"name\": \"Music Controller | @@channel_name@@\",\n                \"icon_url\": \"@@bot_icon@@\"\n            },\n            \"color\": \"@@track_color@@\"\n        },\n        \"inactive\": {\n            \"title\": {\n                \"name\": \"There are no songs playing right now\"\n            },\n            \"description\": \"[Support](@@server_invite_link@@) | [Invite](@@invite_link@@) | [Questionnaire](https://forms.gle/Qm8vjBfg2kp13YGD7)\",\n            \"image\": \"https://i.imgur.com/dIFBwU7.png\",\n            \"color\": \"@@default_embed_color@@\"\n        }\n    }\n},\n</code></pre></p>"},{"location":"placeholder/#buttons","title":"Buttons","text":"UsageUsage (Button with color) <pre><code>[button_name]\n</code></pre> <pre><code>[{\"button\": \"color\"}]\n</code></pre> Color Name Description Grey Color the button grey. Red Color the button red. Blue Color the button blue. Green Color the button green. Button Name Description Back Skips back to the previous song. Resume Resume or pause the music. Skip Skips to the next song. Stop Disconnects the bot from your voice channel and chears the queue. Loop Changes Loop mode. <code>[Off, Track, Queue]</code> Add Add the playing track in to your default custom playlist. VolumeUp Increase player volume by 20%. VolumeDown Decrease player volume by 20%. VolumeMute Mute or unmute the player. Autoplay Enable or disable autoplay mode. Shuffle Randomizes the tracks in the queue. Forward Forward 30 seconds in the current track. Rewind Rewind 30 seconds in the current track. Tracks If there are tracks in the queue, a drop-down list will be appear. Up to 10 tracks. <code>(This will take one row)</code> Example 1Example 2Example 3 settings.json<pre><code>\"default_buttons\": [\n    [\"back\", \"resume\", \"skip\", {\"stop\": \"red\"}, \"add\"],\n    [\"tracks\"]\n]\n</code></pre> settings.json<pre><code>\"default_buttons\": [\n    [\"back\", \"resume\", \"skip\", {\"stop\": \"red\"}, {\"add\": \"green\"}],\n    [{\"loop\": \"green\"}, {\"volumeup\": \"blue\"}, {\"volumedown\": \"blue\"}, {\"volumemute\": \"red\"}],\n    [\"tracks\"]\n]\n</code></pre> settings.json<pre><code>\"default_buttons\": [\n    [\"autoplay\", \"shuffle\", {\"loop\": \"green\"}, \"add\"],\n    [\"back\", \"resume\", \"skip\", {\"stop\": \"red\"}],\n    [\"volumeup\", \"volumedown\", {\"mute\": \"red\"}]\n]\n</code></pre>"},{"location":"changelog/","title":"Changelog","text":"<p>Each release typically encompasses a variety of enhancements and corrections. Notable updates, along with any new features and significant alterations, are itemized for your convenience.</p>"},{"location":"changelog/#vocard-bot","title":"Vocard Bot","text":""},{"location":"changelog/#2.6.8a","title":"2.6.8a July 26, 2024","text":"<ul> <li>Added docker configuration for dashboard</li> <li>Updated README</li> <li>Fixed all instances of typo</li> </ul> <p>Full Changelog: v2.6.8 to v2.6.8a</p>"},{"location":"changelog/#2.6.8","title":"2.6.8 February 27, 2024","text":"<ul> <li>Updated Language Packs: We've refreshed the UA (Ukrainian) and RU (Russian) language packs.</li> <li>Rewritten Placeholder Code: We've introduced new placeholders, <code>track_author</code> and <code>track_color</code>, for more customization.</li> <li>Dockerfile and Docker-compose: We've simplified installation with Docker and included MongoDB in the docker-compose setup.</li> <li>Improved Database Performance: We've switched to <code>motor</code> for faster MongoDB interactions.</li> <li>Command Changes: We've removed the <code>chapters command</code> and added <code>autocomplete</code> in the play command, which now searches with the <code>Spotify API</code> for more efficient and accurate searches.</li> <li>Disable Button Text Option: We've added a disable button text option in <code>settings.json</code>, allowing you to customize the disable controller button text as per your preference.</li> <li>Embed View Change: We've changed the embed view in the <code>/playlist view</code> command for a better user experience.</li> <li>More Typehints: We've added more typehints into the code to make it more understandable and easier to work with.</li> <li>Python 3.12 Support: Vocard now supports <code>Python 3.12</code>.</li> <li>Track URLs: We've added track URLs and redesigned the queue, history, and playlist command views.</li> <li>Played History Feature: We've added a new played history feature to keep track of your tunes.</li> <li>Code Optimizations: We've made several code optimizations to improve the bot's performance.</li> <li>Fixed MP3 URLs: You can now play songs with <code>custom MP3 URLs</code>.</li> <li>New Lyrics Search Platform: We've added a new search lyrics platform, <code>Lyrist</code>, and rewritten the lyrics command. You can now enter the <code>song title</code> and the <code>song author</code> for better searching.</li> <li>Rewritten Placeholder Expression Features: Placeholder expressions have been rewritten for faster execution and more comprehensive actions in the player controller.</li> </ul>"},{"location":"changelog/#breaking-changes","title":"Breaking Changes:","text":"<ul> <li>Collection Name Change: Please note that the collection name Playlist will be changed to Users. This is a significant change and might affect how you interact with the bot.</li> <li>Sources Settings Update: More information (color code) has been added into the \"sources_settings\" field in the settings.json.</li> </ul> <p>Full Changelog: v2.6.7 to v2.6.8</p>"},{"location":"changelog/#2.6.7","title":"2.6.7 December 15, 2023","text":"<ul> <li>Only supported for <code>Lavalink v4.0.0</code> or above</li> <li>Added thumbnail in nowplaying embed</li> <li>Added UA language pack</li> <li>Added helpful guide embed when your command was missing arguments</li> <li>Dump discord.py package update (2.3.1 -&gt; 2.3.2)</li> <li>Fixed seek function in dashboard</li> <li>Fixed playlist playback fix</li> <li>Code clean-up and performance improvement</li> <li>Rewrite debugging command</li> </ul> <p>Full Changelog: v2.6.6 to v2.6.7</p>"}]}